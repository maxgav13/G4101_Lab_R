---
title: "Lab 7: Estadistica Inferencial - Pruebas 1"
author: "Maximiliano Garnier Villarreal"
lang: es
toc: true
toc-depth: 2
toc-title: Contenidos
number-sections: true
highlight-style: pygments
theme: sandstone
format:
  html:
    code-fold: true
    html-math-method: katex
  pdf: default
  docx: default
execute:
  warning: false
  error: false
  echo: true
---

```{r}
#| label: setup
#| include: false

library(MOTE)           # tamanho del efecto
library(papaja)         # presentacion datos
library(GMisc)          # intervalos de confianza
library(OneTwoSamples)  # intervalos y pruebas
library(DescTools)      # pruebas
library(rstatix)        # pruebas y tamanho efecto
library(itns)           # tamanho del efecto
library(tidymodels)     # resumenes tidy y otros
library(ggstatsplot)    # graficos de pruebas
library(tidyverse)
library(easystats)      

theme_set(theme_minimal(base_size = 14))
```


# Prueba $\chi^2$ de 1 varianza

$$H_0 : \sigma^2 = \sigma_0^2$$

```{r}
alfa = .05
w = airquality %>% pull(Temp)

var_test1(x = w, sigma2 = 7^2, side = 0) # OneTwoSample

chi1 = VarTest(x = w, sigma.squared = 7^2, conf.level = 1-alfa) # DescTools
chi1

interval_var1(x = w) # OneTwoSample
ci_chisq(s = sd(w), n = length(w), digits = 4) # GMisc
```


# Prueba F de 2 varianzas

$$H_0 : \sigma_1^2 = \sigma_2^2$$

$$H_0 : \frac{\sigma_1^2}{\sigma_2^2} = 1$$

```{r}
alfa = .05
x = mpg %>% filter(manufacturer=='audi') %>% pull(cty)
y = mpg %>% filter(manufacturer=='ford') %>% pull(cty)

chi2 = var.test(x,y,ratio = 1,conf = 1-alfa)
chi2 %>% 
  tidy()

var_test2(x,y,side = 0) # OneTwoSample
interval_var2(x,y) # OneTwoSample
ci_F(s1 = sd(x), n1 = length(x), s2 = sd(y), n2 = length(y)) # GMisc
```


# Prueba t de 1 muestra

$$H_0 : \mu = \mu_0$$

```{r}
# Ho: mu=7
alfa=.05
mu = 7

verm = c(6.1, 5.5, 5.3, 6.8, 7.6, 5.3, 6.9, 6.1, 5.7)

t1 = t.test(x = verm, mu=mu, alt = "two.sided", conf = 1-alfa)
t1
t1 %>% tidy()

(tcrit = c(qt(alfa/2,length(verm)-1),
           qt(1-alfa/2,length(verm)-1)))
```

## Tamanho del effecto

### MOTE

```{r}
d1 = d.single.t(m = mean(verm), u = mu, sd = sd(verm), 
           n = length(verm), a = alfa)

d1 %>% 
  as_tibble_row()
```

### effectsize

```{r}
cohens_d(verm, mu = mu, ci = 1-alfa) # effectsize

hedges_g(verm, mu = mu, ci = 1-alfa) # effectsize
```


```{r}
gghistostats(tibble(verm),verm,
             test.value = mu,
             type = 'p',
             effsize.type = 'unbiased',
             conf.level = 1-alfa,
             bf.message = F)
```


# Prueba t de 2 muestras independientes

$$H_0 : \mu_1 = \mu_2$$

```{r}
alfa = .05
A = c(25, 40, 34, 37, 38, 35, 29, 32, 35, 44, 27, 33, 37, 38, 36)
B = c(45, 37, 36, 38, 49, 47, 32, 41, 38, 45, 33, 39, 46, 47, 40)

DF = tibble(Val = c(A,B), 
            Grp = c(rep(c('A','B'),each=length(A))))
```

## Graficas

```{r}
DF %>% 
  ggplot() + 
  geom_boxplot(aes(Grp,Val,col=Grp))

DF %>% 
  ggplot(aes(Grp,Val,col=Grp)) + 
  stat_summary(geom = 'pointrange',
               fun.data = mean_cl_normal,
               fun.args = list(conf.int=.95))
```

## Estadisticas por grupo

```{r}
DF %>% 
  group_by(Grp) %>% 
  get_summary_stats()
```

## Revisar igualdad de varianzas

```{r}
var.test(Val ~ Grp, DF, conf.level = 1-alfa)
```


```{r}
t.test(A, B, mu=0, conf.level = 1-alfa) %>% 
  tidy()

t.test(B, A, mu=0, conf.level = 1-alfa) %>% 
  tidy()

t.test(A, B, mu=0, conf.level = 1-alfa, var.equal = T) %>% 
  tidy()

t2 = t.test(Val ~ Grp, DF, conf.level = 1-alfa, var.equal = T)
t2

ci_t2(x1 = mean(A), s1 = sd(A), n1 = length(A), 
      x2 = mean(B), s2 = sd(B), n2 = length(B), 
      conf.level = 1-alfa) # GMisc
```

## Tamanho del effecto

### effectsize

```{r}
cohens_d(A, B, ci = 1-alfa, pooled_sd = T)

hedges_g(Val ~ Grp, data = DF, ci = 1-alfa, pooled_sd = T)
```

### MOTE

```{r}
d2.ind = d.ind.t(m1 = mean(A), m2 = mean(B), 
        sd1 = sd(A), sd2 = sd(B), 
        n1 = length(A), n2 = length(B), a = alfa)

d2.ind %>% 
  as_tibble_row()

g2.ind = g.ind.t(m1 = mean(A), m2 = mean(B), 
        sd1 = sd(A), sd2 = sd(B), 
        n1 = length(A), n2 = length(B), a = alfa)

g2.ind %>% 
  as_tibble_row()
```

## Grafico resumen

```{r}
ggbetweenstats(DF, Grp, Val,
               var.equal = F,
               type = 'p',
               effsize.type = 'unbiased',
               conf.level = 1-alfa,
               bf.message = F)
```


# Prueba t de 2 muestras dependientes

$$H_0 : \mu_D = \mu_{despues} - \mu_{antes} = 0$$

```{r}
alfa = .05
Antes = c(13.5,14.6,12.7,15.5,11.1,16.4,13.2,19.3,16.7,18.4)
Despues = c(13.6,14.6,12.6,15.7,11.1,16.6,13.2,19.5,16.8,18.6)

DF2 = tibble(Val = c(Antes,Despues), 
             Grp = c(rep(c('A','B'), each=length(Antes))))
```


```{r}
t.test(Despues,Antes,mu=0,paired = T) %>% 
  tidy()

ci_t(x = mean(Despues-Antes), s = sd(Despues-Antes), 
     n = length(Antes), conf.level = 1-alfa) # GMisc
```

## Tamanho del effecto

### itns

```{r}
cohensd_rm(Despues, Antes) # itns
```

### MOTE

```{r}
d2.av = d.dep.t.avg(m1 = mean(Antes),m2 = mean(Despues),
            sd1 = sd(Antes),sd2 = sd(Despues),
            n = length(Antes),a = alfa)

d2.av %>% 
  as_tibble_row()

d2.z = d.dep.t.diff(mdiff = mean(Antes-Despues),sddiff = sd(Antes-Despues),
             n = length(Antes),a = alfa)

d2.z %>% 
  as_tibble_row()

d2.rm = d.dep.t.rm(m1 = mean(Antes),m2 = mean(Despues),
           sd1 = sd(Antes),sd2 = sd(Despues),
           r = cor(Antes,Despues),n = length(Antes),
           a = alfa)

d2.rm %>% 
  as_tibble_row()
```

## Grafico resumen

```{r}
ggwithinstats(DF2, Grp, Val,
              type = 'p',
              effsize.type = 'unbiased',
              conf.level = 1-alfa,
              bf.message = F)
```


# Prueba t de correlacion

$$H_0 : \rho = 0$$

```{r}
alfa = .1
a = c(8,16,12,13,16,14,16,11,15,13)
b = c(7,8,10,12,14,9,13,6,9,10)
c = c(3,5,9,5,5,8,13,3,9,9)

cordat = tibble(a,b,c)
```


```{r}
r = cor.test(a,b,method = "pearson",conf = 1-alfa)
r %>% 
  tidy()

CorCI(rho = r$estimate, n = length(a), 
      conf.level = 1-alfa) # DescTools

correlation::cor_test(cordat,'a','b',
                      method = 'pearson',
                      ci = 1-alfa)
```

## Grafico resumen

```{r}
ggscatterstats(cordat, a, b,
               marginal = F,
               type = 'p',
               conf.level = 1-alfa,
               bf.message = F)
```

# Reportes

```{r}
report(chi2)
```

```{r}
report(t2)
```

```{r}
report(r)
```

# Estadisticas

```{r}
apa_print(chi1, n = chi1$parameter+1)
```

```{r}
apa_print(chi2)
```

```{r}
apa_print(t2)
```

```{r}
apa_print(r)
```
