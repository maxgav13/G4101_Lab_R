---
title: "Lab 2: Estadistica Descriptiva 1"
author: "Maximiliano Garnier Villarreal"
lang: es
toc: true
toc-depth: 2
toc-title: Contenidos
number-sections: true
highlight-style: pygments
theme: sandstone
format:
  html:
    code-fold: true
    html-math-method: katex
  pdf: default
  docx: default
execute:
  warning: false
  error: false
  echo: true
---

# Estadistica descriptiva

```{r}
#| label: setup
#| include: flase

library(DescTools)
library(janitor)
library(summarytools)
library(gtsummary)
library(tidyverse)
library(rio)

theme_set(theme_minimal(base_size = 12))

options(
  # OutDec = ',',
  digits = 3
)

theme_gtsummary_language(
  language = "es",
  # decimal.mark = ',',
  # big.mark = '.',
  iqr.sep = NULL,
  ci.sep = NULL
)
```

## Datos categoricos

### Tabla de frecuencias

La forma numerica de resumir datos categoricos es por medio de tablas de frecuencias (1 variable) o tablas de contingencia (2 variables). Hay diferentes funciones para realizar estas tareas, aqui se muestran 3: `tabyl` del paquete **janitor**, `freq` del paquete **summarytools**, y `tbl_cross` del paquete **gtsummary**. Los paquetes **janitor** y **gtsummary** permiten generar tablas esteticas y con gran detalle.

```{r}
gss_cat %>% glimpse()

tabyl(dat = gss_cat, var1 = marital)

tabyl(gss_cat, race)

freq(gss_cat, race)

freq(gss_cat, race) %>% 
  as_tibble(rownames = 'race') %>% 
  clean_names()

tbl_cross(gss_cat, marital, race, percent = 'cell')
```

### Graficos

#### Barras

Para `geom_bar` el argumento *position* puede tener cualquiera de estos tres valores: 'stack', 'dodge' o 'fill', para cuando se visualizan 2 variables categoricas.

```{r}
ggplot(data = gss_cat, aes(x = race, fill = race)) +
  geom_bar()

ggplot(data = gss_cat, aes(x = race, fill = marital)) +
  geom_bar(position = 'fill')
```


## Datos continuos

```{r}
data("airquality")
head(airquality)
```

### Tabla de Frecuencias

Para tablas de frecuencias con datos numericos estos deben ser separados en clases (*breaks*) y sobre estas clases se genera la tabla de frecuencias. La funcion `Freq` requiere el vector de la variable.

```{r}
Freq(x = airquality$Temp)

Freq(airquality$Temp, breaks = 6)

Freq(airquality$Temp, breaks = seq(50,100,10))
```

### Graficos

#### Histograma

Dentro de `geom_histogram` hay 3 opciones para definir la discretizacion:

* bins = Numero de clases
* binwidth = El ancho de las clases
* breaks = Un vector con los puntos donde separar los datos

*Frecuencias absolutas*

```{r}
ggplot(data = airquality, aes(x = Temp)) + 
  geom_histogram(breaks = seq(50,100,10), 
                 col='black', fill='lightblue')
```

*Frecuencias relativas*

```{r}
ggplot(airquality, aes(Temp)) + 
  geom_histogram(breaks = seq(50,100,10), 
                 aes(y=stat(count/sum(count))), 
                 col='black', fill='lightblue')
```

```{r}
tabyl(airquality,Month)

airq = airquality %>% 
  mutate(Month = factor(Month,
                        labels = c("Mayo", "Junio", "Julio", 
                                   "Agosto", "Setiembre")))

tabyl(airq,Month)
```

#### Grafico de caja

```{r}
ggplot(data = airq, aes(x = Month, y = Temp)) +
  geom_boxplot()

ggplot(airq, aes(Temp, Month)) +
  geom_boxplot() +
  stat_summary(fun = mean, geom = 'point', shape=3)
``` 

### Medidas de tendencia central

Se muestran diferentes funciones para caracterizar la tendencia central en un vector corriente, uno con un valor atipico y otro con un valor faltante, para ver como se ven afectadas las diferentes estadisticas.

```{r}
myvector = c(22,10,10,16,15,15,24,19,15,
             19,18,16,18,12,17,17,11,18)
summary(myvector)
mean(myvector)
median(myvector)
DescTools::Gmean(myvector) # media geometrica
DescTools::Mode(myvector) # moda

outlier = c(myvector,200)
summary(outlier)
mean(outlier)
median(outlier)
DescTools::Gmean(outlier)
DescTools::Mode(outlier)

miss = c(myvector,NA)
summary(miss)
mean(miss, na.rm = T)
median(miss, na.rm = T)
DescTools::Gmean(miss, na.rm = T)
DescTools::Mode(miss, na.rm = T)
```

### Medidas de dispersion

```{r}
summary(myvector)
range(myvector)
diff(range(myvector))
var(myvector) # varianza
sd(myvector) # desviacion estandar
DescTools::CoefVar(myvector) # coeficiente de variacion
IQR(myvector) # rango intercuartil
mad(myvector) # desviacion absoluta de la mediana
sd(outlier)
mad(outlier)
```

### Asimetria y Curtosis

```{r}
e1071::skewness(myvector) # asimetria
e1071::kurtosis(myvector) # curtosis
DescTools::Skew(myvector)
DescTools::Kurt(myvector)
```

### Descripciones mas generales

Se muestran varias funciones que generan un resumen general de un vector o DataFrame, para este ultimo dependiendo del tipo de variable presente.

Vector

```{r}
skimr::skim(myvector)
psych::describe(myvector)
DescTools::Desc(myvector)
summarytools::descr(myvector)
```

DataFrame

```{r}
skimr::skim(airq)
DescTools::Desc(airq)
summarytools::descr(airq)
```

